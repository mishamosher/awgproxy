name: Build
on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'
  workflow_dispatch:

jobs:
  windowsAmd64Build:
    name: Build Windows amd64 Version
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setting up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.24.3"
      - name: Building Windows amd64 Version
        run: |
          CGO_ENABLED=0 GOOS=windows GOARCH=amd64 go build -o AWGProxy_amd64.exe -v ./cmd/awgproxy
          mkdir release_windows_amd64
          mv AWGProxy_amd64.exe awgproxy.exe
          cp awgproxy.exe release_windows_amd64/awgproxy.exe
      - name: Upload Windows amd64 Version
        uses: actions/upload-artifact@v4
        with:
          name: AWGProxy_windows_amd64
          path: release_windows_amd64
  windowsArm64Build:
    name: Build Windows arm64 Version
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setting up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.24.3"
      - name: Building Windows arm64 Version
        run: |
          CGO_ENABLED=0 GOOS=windows GOARCH=arm64 go build -o AWGProxy_arm64.exe -v ./cmd/awgproxy
          mkdir release_windows_arm64
          mv AWGProxy_arm64.exe awgproxy.exe
          cp awgproxy.exe release_windows_arm64/awgproxy.exe
      - name: Upload Windows arm64 Version
        uses: actions/upload-artifact@v4
        with:
          name: AWGProxy_windows_arm64
          path: release_windows_arm64
  linuxAmd64Build:
    name: Build Linux amd64 Version
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setting up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.24.3"
      - name: Building Linux amd64 Version
        run: |
          CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -o AWGProxy_amd64 -v ./cmd/awgproxy
          mkdir release_linux_amd64
          mv AWGProxy_amd64 awgproxy
          cp awgproxy release_linux_amd64/awgproxy
      - name: Upload Linux amd64 Version
        uses: actions/upload-artifact@v4
        with:
          name: AWGProxy_linux_amd64
          path: release_linux_amd64
  linuxArm64Build:
    name: Build Linux arm64 Version
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setting up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.24.3"
      - name: Building Linux arm64 Version
        run: |
          CGO_ENABLED=0 GOOS=linux GOARCH=arm64 go build -o AWGProxy_arm64 -v ./cmd/awgproxy
          mkdir release_linux_arm64
          mv AWGProxy_arm64 awgproxy
          cp awgproxy release_linux_arm64/awgproxy
      - name: Upload Linux arm64 Version
        uses: actions/upload-artifact@v4
        with:
          name: AWGProxy_linux_arm64
          path: release_linux_arm64
  linuxS390xBuild:
    name: Build Linux s390x Version
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setting up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.24.3"
      - name: Building Linux s390x Version
        run: |
          CGO_ENABLED=0 GOOS=linux GOARCH=s390x go build -o AWGProxy_s390x -v ./cmd/awgproxy
          mkdir release_linux_s390x
          mv AWGProxy_s390x awgproxy
          cp awgproxy release_linux_s390x/awgproxy
      - name: Upload Linux s390x Version
        uses: actions/upload-artifact@v4
        with:
          name: AWGProxy_linux_s390x
          path: release_linux_s390x
  darwinAmd64Build:
    name: Build Darwin amd64 Version
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setting up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.24.3"
      - name: Building Darwin amd64 Version
        run: |
          CGO_ENABLED=0 GOOS=darwin GOARCH=amd64 go build -o AWGProxy_amd64 -v ./cmd/awgproxy
          mkdir release_darwin_amd64
          mv AWGProxy_amd64 awgproxy
          cp awgproxy release_darwin_amd64/awgproxy
      - name: Upload Darwin amd64 Version
        uses: actions/upload-artifact@v4
        with:
          name: AWGProxy_darwin_amd64
          path: release_darwin_amd64
  darwinArm64Build:
    name: Build Darwin arm64 Version
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setting up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.24.3"
      - name: Building Darwin arm64 Version
        run: |
          CGO_ENABLED=0 GOOS=darwin GOARCH=arm64 go build -o AWGProxy_arm64 -v ./cmd/awgproxy
          mkdir release_darwin_arm64
          mv AWGProxy_arm64 awgproxy
          cp awgproxy release_darwin_arm64/awgproxy
      - name: Upload Darwin arm64 Version
        uses: actions/upload-artifact@v4
        with:
          name: AWGProxy_darwin_arm64
          path: release_darwin_arm64
